{"version":3,"sources":["services/auth-services.js","Components/Signup.js","Components/Login.js","Components/Navbar.js","services/board-services.js","services/post-services.js","services/collection-services.js","Views/Home.js","Components/AddPostForm.js","Components/AddCollectionForm.js","Components/AddBoardForm.js","Views/Board.js","Views/Collection.js","App.js","index.js"],"names":["authAPI","axios","create","baseURL","Signup","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","state","username","password","Promise","resolve","reject","post","then","response","user","data","catch","error","AuthenticationServices","props","updateUser","loggedIn","redirectTo","console","log","confirmPassword","this","to","pathname","className","htmlFor","type","autoComplete","id","aria-describedby","onChange","onClick","Component","LoginForm","bind","Navbar","logout","status","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","boardAPI","postAPI","collectionAPI","addCollection","newCollection","getCollections","get","collections","Home","componentDidMount","collectionServices","length","map","collection","_id","AddPostForm","link","includes","description","board","match","params","boardId","postServices","rows","CollectionForm","addBoardForm","openForm","curr","boardServices","collectionID","boards","currentCollection","filteredCollection","filter","for","index","Board","posts","boardID","src","alt","Collection","style","width","App","getUser","userObject","loaded","exact","path","render","component","AddBoardForm","AddCollectionForm","Login","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6de17e4a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst authAPI = axios.create({\n  baseURL: `/`\n});\n\nexport const signUpService = ({ username, password, name }) =>\n  new Promise((resolve, reject) => {\n    authAPI\n      .post(\"/user/signup\", {\n        username,\n        password,\n        name\n      })\n      .then(response => {\n        const user = response.data;\n        resolve(user);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n\nexport const logInService = ({ username, password }) =>\n  new Promise((resolve, reject) => {\n    authAPI\n      .post(\"/user/login\", { username, password })\n      .then(response => {\n        const user = response.data;\n        resolve(user);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n\nexport const logOutService = () =>\n  new Promise((resolve, reject) => {\n    authAPI\n      .post(\"/user/logout\")\n      .then(response => {\n        resolve(response);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as AuthenticationServices from \"../services/auth-services\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      name: \"\",\n      redirectTo: null,\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { username, password, name } = this.state;\n    AuthenticationServices.signUpService({\n      username,\n      password,\n      name,\n    })\n      .then((user) => {\n        this.props.updateUser({\n          loggedIn: true,\n          user: user,\n        });\n        this.setState({\n          redirectTo: \"/\",\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"container mt-4\">\n          <h4>Sign up</h4>\n          <form>\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"username\">Email address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                autoComplete=\"username\"\n                id=\"username\"\n                name=\"username\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                aria-describedby=\"emailHelp\"\n                className=\"form-control\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                autoComplete=\"new-password\"\n                className=\"form-control\"\n                id=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={this.handleSubmit}\n            >\n              Sign Up\n            </button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as AuthenticationServices from \"../services/auth-services\";\n\nclass LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirectTo: null,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { username, password } = this.state;\n    AuthenticationServices.logInService({\n      username,\n      password,\n    })\n      .then((user) => {\n        this.props.updateUser({\n          loggedIn: true,\n          user: user,\n        });\n        this.setState({\n          redirectTo: \"/\",\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"container mt-4\">\n          <h4>Login</h4>\n          <form>\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"username\">Email address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"username\"\n                autoComplete=\"username\"\n                name=\"username\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                autoComplete=\"current-password\"\n                className=\"form-control\"\n                id=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={this.handleSubmit}\n            >\n              Login\n            </button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport * as AuthenticationServices from \"../services/auth-services\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  logout = (event) => {\n    event.preventDefault();\n    AuthenticationServices.logOutService()\n      .then((response) => {\n        if (response.status === 200) {\n          this.props.updateUser({\n            user: null,\n          });\n          this.setState({\n            redirectTo: \"/\",\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    let user = this.props.user;\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link to=\"/\" className=\"btn btn-link text-secondary\">\n          <i class=\"fas fa-coffee\"></i>\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-end\"\n          id=\"navbarNav\"\n        >\n          {user ? (\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link\n                  to=\"#\"\n                  className=\"btn btn-link text-secondary\"\n                  onClick={this.logout}\n                >\n                  <span className=\"text-secondary\">Log Out</span>\n                </Link>\n              </li>\n            </ul>\n          ) : (\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link to=\"/signup\" className=\"btn btn-link\">\n                  <span className=\"text-secondary\">Sign up</span>\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/login\" className=\"btn btn-link text-secondary\">\n                  <span className=\"text-secondary\">Login</span>\n                </Link>\n              </li>\n            </ul>\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import axios from \"axios\";\n\nconst boardAPI = axios.create({\n  baseURL: `/board`,\n});\n\nexport const addBoard = ({ name, description, collections }) =>\n  new Promise((resolve, reject) => {\n    boardAPI\n      .post(\"/add\", { name, description, collections })\n      .then((response) => {\n        const board = response.data;\n        resolve(board);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n\nexport const getBoards = ({ collection }) =>\n  new Promise((resolve, reject) => {\n    boardAPI\n      .post(\"/load\", { collection })\n      .then((response) => {\n        const boards = response.data;\n        resolve(boards);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n","import axios from \"axios\";\n\nconst postAPI = axios.create({\n  baseURL: `/post`,\n});\n\nexport const addPost = ({ link, name, description, board, type }) =>\n  new Promise((resolve, reject) => {\n    postAPI\n      .post(\"/add\", { link, name, description, board })\n      .then((response) => {\n        const post = response.data;\n        resolve(post);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n\nexport const getPosts = ({ board }) =>\n  new Promise((resolve, reject) => {\n    postAPI\n      .post(\"/load\", { board })\n      .then((response) => {\n        const posts = response.data;\n        resolve(posts);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n","import axios from \"axios\";\n\nconst collectionAPI = axios.create({\n  baseURL: `/collection`,\n});\n\nexport const addCollection = ({ name }) =>\n  new Promise((resolve, reject) => {\n    collectionAPI\n      .post(\"/add\", { name })\n      .then((response) => {\n        const newCollection = response.data;\n        resolve(newCollection);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n\nexport const getCollections = () =>\n  new Promise((resolve, reject) => {\n    collectionAPI\n      .get(\"/load\")\n      .then((response) => {\n        const collections = response.data;\n        resolve(collections);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as boardServices from \"../services/board-services\";\nimport * as postServices from \"../services/post-services\";\nimport * as collectionServices from \"../services/collection-services\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectTo: null,\n      collections: null,\n    };\n  }\n\n  componentDidMount = () => {\n    collectionServices\n      .getCollections()\n      .then((collections) => {\n        this.setState({\n          collections: collections.data.collections,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    let user = this.props.user;\n    let collections = this.state.collections;\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div>\n          {collections &&\n            (user ? (\n              <div className=\"container\">\n                <Link to={`/collection/add`}>\n                  <i class=\"fas fa-plus-circle fa-2x text-right d-block mt-5\"></i>\n                </Link>\n                {collections.length > 0 ? (\n                  <div class=\"container mt-4\">\n                    <div class=\"row\">\n                      {collections.map((collection) => (\n                        <div class=\"col-6 col-md-4 mt-4\">\n                          <div class=\"board-card\">\n                            <Link\n                              to={`/collection/${collection._id}`}\n                              class=\"h1\"\n                            >\n                              {collection.name}\n                            </Link>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ) : (\n                  <h1 className=\"text-center\">Add some collections!</h1>\n                )}\n              </div>\n            ) : (\n              <div class=\"container text-center\">\n                <h1>Sign up or Log in to Get Started!</h1>\n              </div>\n            ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport * as postServices from \"../services/post-services\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AddPostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      link: \"\",\n      name: \"\",\n      description: \"\",\n      redirectTo: null,\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let type = \"link\";\n    if (this.state.link.includes(\"youtube.com\")) {\n      type = \"video\";\n    } else if (\n      this.state.link.includes(\"jpg\") ||\n      this.state.link.includes(\"png\")\n    ) {\n      type = \"image\";\n    }\n\n    let { link, name, description } = this.state;\n    let board = this.props.match.params.boardId;\n    postServices\n      .addPost({\n        link,\n        name,\n        description,\n        board,\n      })\n      .then((post) => {\n        this.setState({\n          redirectTo: `/board/${board}`,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div class=\"container my-5 form-container\">\n          <h1 className=\"text-center\">Add new post</h1>\n          <form>\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"link\">Image Link</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                autoComplete=\"link\"\n                id=\"link\"\n                name=\"link\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.link}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                autoComplete=\"name\"\n                id=\"name\"\n                name=\"name\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              rows=\"4\"\n              class=\"w-100\"\n              aria-describedby=\"emailHelp\"\n              value={this.state.description}\n              onChange={this.handleChange}\n            ></textarea>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-warning d-block mx-auto mt-3\"\n              onClick={this.handleSubmit}\n            >\n              Add\n            </button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default AddPostForm;\n","import React, { Component } from \"react\";\nimport * as collectionServices from \"../services/collection-services\";\nimport { Redirect } from \"react-router-dom\";\nclass CollectionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      redirectTo: null,\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, description } = this.state;\n    collectionServices\n      .addCollection({\n        name,\n        description,\n      })\n      .then((collection) => {\n        this.setState({\n          redirectTo: `/collection/${collection.data.collections._id}`,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div class=\"container my-5 form-container\">\n          <h1 className=\"text-center my-4\">Add Collection</h1>\n          <form>\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                autoComplete=\"name\"\n                id=\"name\"\n                name=\"name\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              class=\"w-100\"\n              rows=\"4\"\n              name=\"description\"\n              aria-describedby=\"emailHelp\"\n              value={this.state.description}\n              onChange={this.handleChange}\n            ></textarea>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-warning d-block mx-auto mt-3\"\n              onClick={this.handleSubmit}\n            >\n              Add\n            </button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default CollectionForm;\n","// import React, { Component } from \"react\";\n// import * as boardServices from \"../services/board-services\";\n// import * as collectionServices from \"../services/collection-services\";\n// import { Redirect } from \"react-router-dom\";\n// import CollectionForm from \"./AddCollectionForm\";\n\n// class addBoardForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: \"\",\n//       description: \"\",\n//       redirectTo: null,\n//       openForm: false,\n//       addCollection: \"\",\n//       collection: \"\",\n//       newCollection: \"\",\n//     };\n//   }\n\n//   handleChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value,\n//     });\n//   };\n\n//   openForm = () => {\n//     let curr = this.state.openForm;\n//     this.setState({\n//       openForm: !curr,\n//     });\n//   };\n\n//   handleSubmit = (event) => {\n//     event.preventDefault();\n//     const { name, description } = this.state;\n//     let collections;\n//     if (this.state.newcollection.length > 0) {\n//       collections = this.state.newcollection._id;\n//     } else {\n//       collections = this.state.collection;\n//     }\n//     boardServices\n//       .addBoard({\n//         name,\n//         description,\n//         collections,\n//       })\n//       .then((listing) => {\n//         this.setState({ redirectTo: \"/\" });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n\n//   addCollection = (event) => {\n//     event.preventDefault();\n//     const name = this.state.addCollection;\n//     collectionServices\n//       .addCollection({\n//         name,\n//       })\n//       .then((collection) => {\n//         this.setState({ newCollection: collection.data.collections });\n//         this.openForm();\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n\n//   collection = (event) => {\n//     if (event.target.value === \"create\") {\n//       this.openForm();\n//     } else {\n//       this.setState({ collection: event.target.value });\n//     }\n//   };\n\n//   render() {\n//     if (this.state.redirectTo) {\n//       return <Redirect to={{ pathname: this.state.redirectTo }} />;\n//     } else {\n//       return (\n//         this.props.collections && (\n//           <div class=\"container my-5 3-5 form-container\">\n//             {this.state.openForm === true && (\n//               <div class=\"container bg-secondary rounded\">\n//                 <label>Name of Collection</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   autoComplete=\"name\"\n//                   id=\"collection\"\n//                   name=\"addCollection\"\n//                   aria-describedby=\"emailHelp\"\n//                   value={this.state.addCollection}\n//                   onChange={this.handleChange}\n//                 ></input>\n//                 <button\n//                   type=\"submit\"\n//                   className=\"btn btn-warning d-block mx-auto mt-3\"\n//                   onClick={this.addCollection}\n//                 >\n//                   Add\n//                 </button>\n//               </div>\n//             )}\n//             <h1 className=\"text-center\">Add Board</h1>\n//             <form>\n//               <div className=\"form-group text-left\">\n//                 {this.props.collections.length > 0 ? (\n//                   <div>\n//                     <label for=\"sel1\">Select list (select one):</label>\n//                     <select\n//                       class=\"form-control my-3\"\n//                       value={this.state.collection}\n//                       onChange={this.collection}\n//                     >\n//                       {this.state.newCollection !== null && (\n//                         <option value={this.state.newCollection.name}>\n//                           {this.state.newCollection.name}\n//                         </option>\n//                       )}\n//                       {this.props.collections.map((collection, index) => (\n//                         <option value={collection._id}>\n//                           {collection.name}\n//                         </option>\n//                       ))}\n//                       <option value=\"create\">Create Collection</option>\n//                     </select>\n//                   </div>\n//                 ) : (\n//                   <div>\n//                     <label for=\"sel1\">Select aCollection:</label>\n//                     <select\n//                       class=\"form-control my-3\"\n//                       value={this.state.collection}\n//                       onChange={this.collection}\n//                     >\n//                       <option value=\"main\">Main</option>\n//                       <option value=\"create\">Create Collection</option>\n//                     </select>\n//                   </div>\n//                 )}\n\n//                 <label htmlFor=\"name\">Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   autoComplete=\"name\"\n//                   id=\"name\"\n//                   name=\"name\"\n//                   aria-describedby=\"emailHelp\"\n//                   value={this.state.name}\n//                   onChange={this.handleChange}\n//                 ></input>\n//               </div>\n//               <label htmlFor=\"description\">Description</label>\n//               <textarea\n//                 id=\"description\"\n//                 class=\"w-100\"\n//                 rows=\"4\"\n//                 name=\"description\"\n//                 aria-describedby=\"emailHelp\"\n//                 value={this.state.description}\n//                 onChange={this.handleChange}\n//               ></textarea>\n\n//               <button\n//                 type=\"submit\"\n//                 className=\"btn btn-warning d-block mx-auto mt-3\"\n//                 onClick={this.handleSubmit}\n//               >\n//                 Add\n//               </button>\n//             </form>\n//           </div>\n//         )\n//       );\n//     }\n//   }\n// }\n\n// export default addBoardForm;\n\nimport React, { Component } from \"react\";\nimport * as boardServices from \"../services/board-services\";\nimport * as collectionServices from \"../services/collection-services\";\nimport { Redirect } from \"react-router-dom\";\nimport CollectionForm from \"./AddCollectionForm\";\n\nclass addBoardForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      redirectTo: null,\n      openForm: false,\n      addCollection: \"\",\n      collection: null,\n      newCollection: null,\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  openForm = () => {\n    let curr = this.state.openForm;\n    this.setState({\n      openForm: !curr,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, description } = this.state;\n    let collections;\n\n    if (this.state.collection === null) {\n      collections = this.props.match.params.collectionID;\n    } else {\n      collections = this.state.collection;\n    }\n\n    boardServices\n      .addBoard({\n        name,\n        description,\n        collections,\n      })\n      .then((board) => {\n        console.log(board.data);\n        this.setState({ redirectTo: `/board/${board.data.boards._id}` });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  addCollection = (event) => {\n    event.preventDefault();\n    const name = this.state.addCollection;\n    collectionServices\n      .addCollection({\n        name,\n      })\n      .then((collection) => {\n        this.setState({\n          newCollection: collection.data.collections,\n          collection: collection.data.collections._id,\n        });\n        this.openForm();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  collection = (event) => {\n    if (event.target.value === \"create\") {\n      this.openForm();\n    } else {\n      this.setState({ collection: event.target.value });\n    }\n  };\n\n  render() {\n    let currentCollection;\n    let filteredCollection;\n    if (this.props.collections && this.props.collections.length > 0) {\n      currentCollection = this.props.collections.filter(\n        (collection) => collection._id === this.props.match.params.collectionID\n      );\n      filteredCollection = this.props.collections.filter(\n        (collection) => collection._id !== this.props.match.params.collectionID\n      );\n    }\n\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        this.props.collections && (\n          <div class=\"container my-5 3-5 form-container\">\n            {this.state.openForm === true && (\n              <div class=\"container bg-secondary rounded\">\n                <label>Name of Collection</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  autoComplete=\"name\"\n                  id=\"collection\"\n                  name=\"addCollection\"\n                  aria-describedby=\"emailHelp\"\n                  value={this.state.addCollection}\n                  onChange={this.handleChange}\n                ></input>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-warning d-block mx-auto mt-3\"\n                  onClick={this.addCollection}\n                >\n                  Add\n                </button>\n              </div>\n            )}\n            <h1 className=\"text-center\">Add Board</h1>\n            <form>\n              <div className=\"form-group text-left\">\n                <div>\n                  <label for=\"sel1\">Select Collection:</label>\n                  <select\n                    class=\"form-control my-3\"\n                    value={this.state.collection}\n                    onChange={this.collection}\n                  >\n                    {this.state.newCollection !== null && (\n                      <option value={this.state.newCollection._id}>\n                        {this.state.newCollection.name}\n                      </option>\n                    )}\n                    <option value={currentCollection[0]._id}>\n                      {currentCollection[0].name}\n                    </option>\n\n                    {filteredCollection.map((collection, index) => (\n                      <option value={collection._id}>{collection.name}</option>\n                    ))}\n                    <option value=\"create\">Create Collection</option>\n                  </select>\n                </div>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  autoComplete=\"name\"\n                  id=\"name\"\n                  name=\"name\"\n                  aria-describedby=\"emailHelp\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                ></input>\n              </div>\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                class=\"w-100\"\n                rows=\"4\"\n                name=\"description\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.description}\n                onChange={this.handleChange}\n              ></textarea>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-warning d-block mx-auto mt-3\"\n                onClick={this.handleSubmit}\n              >\n                Add\n              </button>\n            </form>\n          </div>\n        )\n      );\n    }\n  }\n}\n\nexport default addBoardForm;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postServices from \"../services/post-services\";\nimport { Link } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: null,\n      redirectTo: null,\n      posts: null,\n    };\n  }\n\n  componentDidMount = () => {\n    const board = this.props.match.params.id;\n    postServices\n      .getPosts({ board })\n      .then((posts) => {\n        this.setState({\n          posts: posts.data.post,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    let boardID = this.props.match.params.id;\n    let posts = this.state.posts;\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"container\">\n          {posts && (\n            <div class=\"container\">\n              <Link to={`/${boardID}/post/add`}>\n                <i class=\"fas fa-plus-circle fa-2x text-right d-block mt-5\"></i>\n              </Link>\n              <div class=\"row align-items-center\">\n                {posts.length > 0 ? (\n                  <div class=\"container mt-4 text-center\">\n                    <div class=\"row\">\n                      {posts.map((post) => (\n                        <div class=\"col-6 col-md-4 mt-4\">\n                          <img\n                            src={post.link}\n                            class=\"card-img-top\"\n                            alt=\"...\"\n                          ></img>\n                          <div class=\"card-body\">\n                            <h4 class=\"card-title\">{post.name}</h4>\n                            <p class=\"card-text\">{post.description}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ) : (\n                  <h1 className=\"text-center\">Add some posts!</h1>\n                )}\n\n                {/* <ReactPlayer\n                          url={post.link}\n                          width=\"100%\"\n                          height=\"190px\"\n                        /> */}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as boardServices from \"../services/board-services\";\nimport { Link } from \"react-router-dom\";\n\nclass Collection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boards: null,\n      redirectTo: null,\n    };\n  }\n\n  componentDidMount = () => {\n    let collection = this.props.match.params.id;\n    boardServices\n      .getBoards({ collection })\n      .then((boards) => {\n        this.setState({ boards: boards.data.boards });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    let boards = this.state.boards;\n    let collectionID = this.props.match.params.id;\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"container\">\n          {boards && (\n            <div class=\"container\">\n              <Link to={`/${collectionID}/board/add`}>\n                <i class=\"fas fa-plus-circle fa-2x text-right d-block mt-5\"></i>\n              </Link>\n\n              {boards.length > 0 ? (\n                <div class=\"row align-items-center\">\n                  {boards.map((board) => (\n                    <div class=\"col-6 col-md-4 mt-4\">\n                      <Link to={`/board/${board._id}`}>\n                        <div\n                          class=\"card text-center\"\n                          style={{ width: \"18rem\" }}\n                        >\n                          {/* <img src=\"...\" class=\"card-img-top\" alt=\"...\"></img> */}\n                          <div class=\"card-body\">\n                            <h5 class=\"card-title\">{board.name}</h5>\n                            <p class=\"card-text\">{board.description}</p>\n                          </div>\n                        </div>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <h1>Add Some Boards!</h1>\n              )}\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Collection;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Signup from \"./Components/Signup\";\nimport LoginForm from \"./Components/Login\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./Views/Home\";\nimport AddPostForm from \"./Components/AddPostForm\";\nimport AddBoardForm from \"./Components/AddBoardForm\";\nimport AddCollectionForm from \"./Components/AddCollectionForm\";\nimport Board from \"./Views/Board\";\nimport Collection from \"./Views/Collection\";\nimport * as collectionServices from \"./services/collection-services\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      loaded: false,\n      collections: null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.getUser();\n  };\n\n  updateUser = (userObject) => {\n    this.setState(userObject);\n  };\n\n  getCollections = () => {\n    collectionServices\n      .getCollections()\n      .then((collections) => {\n        if (collections.data.collections.length > 0) {\n          this.setState({\n            collections: collections.data.collections,\n          });\n        }\n        // else {\n        //   this.createDefaultCollection();\n        // }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // createDefaultCollection = () => {\n  //   let name = \"My Collection\";\n  //   collectionServices\n  //     .addCollection({ name })\n  //     .then((collections) => {\n  //       this.setState({\n  //         collections: collections.data.collections,\n  //       });\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n  getUser = () => {\n    axios.get(\"/user/\").then((response) => {\n      if (response.data.user) {\n        this.setState({\n          user: response.data.user,\n          loaded: true,\n        });\n        this.getCollections();\n      } else {\n        this.setState({\n          user: null,\n          loaded: true,\n        });\n      }\n    });\n  };\n\n  render() {\n    return (\n      this.state.loaded === true && (\n        <BrowserRouter>\n          <Navbar updateUser={this.updateUser} user={this.state.user} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Home user={this.state.user} />}\n            />\n            <Route exact path={`/:boardId/post/add`} component={AddPostForm} />\n            <Route\n              exact\n              path={`/:collectionID/board/add`}\n              render={(props) => (\n                <AddBoardForm {...props} collections={this.state.collections} />\n              )}\n            />\n            <Route exact path={`/board/:id`} component={Board} />\n            <Route\n              exact\n              path={`/collection/add`}\n              component={AddCollectionForm}\n            />\n            <Route exact path={`/collection/:id`} component={Collection} />\n            <Route\n              path=\"/login\"\n              render={() => <LoginForm updateUser={this.updateUser} />}\n            />\n            <Route\n              path=\"/signup\"\n              render={() => <Signup updateUser={this.updateUser} />}\n            />\n          </Switch>\n        </BrowserRouter>\n      )\n    );\n  }\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n// import $ from \"jquery\";\n// import Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\"; //don't need to specify localhost url in axios http address\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}